{"version":3,"sources":["components/Chat/Chat.js","components/Join/Join.js","components/InfoBar/InfoBar.js","components/Input/Input.js","components/Message/Message.js","components/Messages/Messages.js","App.js","index.js"],"names":["socket","Join","useState","name","setName","room","setRoom","className","placeholder","type","onChange","event","target","value","onClick","preventDefault","to","InfoBar","href","message","setMessage","sendMessage","onKeyPress","key","Message","text","user","isSentByCurrentUser","trimmedName","trim","toLowerCase","ReactEmoji","emojify","Messages","messages","map","i","Chat","location","setMessages","ENDPOINT","useEffect","queryString","parse","search","io","emit","err","off","on","App","path","exact","component","ReactDOM","render","document","querySelector"],"mappings":"2NASIA,E,uDCeWC,G,MAnBF,WAAM,IAAD,EACSC,mBAAS,IADlB,mBACPC,EADO,KACFC,EADE,OAESF,mBAAS,IAFlB,mBAEPG,EAFO,KAEFC,EAFE,KAId,OACI,yBAAKC,UAAU,sBACX,yBAAKA,UAAU,sBACX,wBAAIA,UAAU,WAAd,QACA,6BAAK,2BAAOC,YAAY,OAAOD,UAAU,YAAYE,KAAK,OAAOC,SAAU,SAACC,GAAD,OAASP,EAAQO,EAAMC,OAAOC,WACzG,6BAAK,2BAAOL,YAAY,OAAOD,UAAU,kBAAkBE,KAAK,OAAOC,SAAU,SAACC,GAAD,OAASL,EAAQK,EAAMC,OAAOC,WAE/G,kBAAC,IAAD,CAAMC,QAAS,SAAAH,GAAK,OAAMR,GAASE,EAAgC,KAAxBM,EAAMI,kBAAwBC,GAAE,qBAAgBb,EAAhB,iBAA6BE,IACtG,4BAAQE,UAAU,eAAeE,KAAK,UAAtC,gB,0CCCHQ,G,cAdC,SAAC,GAAU,IAATZ,EAAQ,EAARA,KAGjB,OAAQ,yBAAKE,UAAU,WACZ,yBAAKA,UAAU,sBACX,kCACA,4BAAKF,IAET,yBAAKE,UAAU,uBACX,uBAAGW,KAAK,KAAR,SCKDD,G,OAdC,SAAC,GAAsC,IAArCE,EAAoC,EAApCA,QAASC,EAA2B,EAA3BA,WAAYC,EAAe,EAAfA,YACtC,OACI,0BAAMd,UAAU,QACZ,2BAAOA,UAAU,QACjBE,KAAK,OACLD,YAAY,oBACZK,MAAOM,EACPT,SAAU,SAACC,GAAD,OAASS,EAAWT,EAAMC,OAAOC,QAC3CS,WAAY,SAAAX,GAAK,MAAc,UAAZA,EAAMY,IAAcF,EAAYV,GAAQ,QAC5D,4BAAQJ,UAAU,aAAaO,QAAW,SAACH,GAAD,OAAUU,EAAYV,KAAhE,W,kCCsBOa,G,OA9BC,SAAC,GAAiC,IAAD,IAA/BL,QAASM,EAAsB,EAAtBA,KAAKC,EAAiB,EAAjBA,KACxBC,GAAsB,EACpBC,EAFuC,EAAVzB,KAEV0B,OAAOC,cAMhC,OAJGJ,IAASE,IACVD,GAAsB,GAIrBA,EAEG,yBAAKpB,UAAU,+BACZ,uBAAGA,UAAU,YAAYqB,GACzB,yBAAKrB,UAAU,6BACb,uBAAGA,UAAU,0BAA0BwB,IAAWC,QAAQP,MAK/D,yBAAKlB,UAAU,iCAEZ,yBAAKA,UAAU,8BACb,uBAAGA,UAAU,yBAAyBwB,IAAWC,QAAQP,KAE3D,uBAAGlB,UAAU,kBAAkBmB,MCf7BO,G,OARE,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,SAAS/B,EAAU,EAAVA,KACxB,OACI,kBAAC,IAAD,CAAgBI,UAAU,YACrB2B,EAASC,KAAI,SAAChB,EAASiB,GAAV,OAAe,yBAAKb,IAAKa,GAAG,kBAAC,EAAD,CAASjB,QAASA,EAAShB,KAAMA,WLyDxEkC,EAvDF,SAAC,GAAc,IAAbC,EAAY,EAAZA,SAAY,EAEApC,mBAAS,IAFT,mBAEhBC,EAFgB,KAEXC,EAFW,OAGAF,mBAAS,IAHT,mBAGhBG,EAHgB,KAGXC,EAHW,OAIMJ,mBAAS,IAJf,mBAIhBiB,EAJgB,KAIRC,EAJQ,OAKQlB,mBAAS,IALjB,mBAKhBgC,EALgB,KAKPK,EALO,KAMjBC,EAAW,8CAEjBC,qBAAU,WAAK,IAAD,EACUC,IAAYC,MAAML,EAASM,QAAzCzC,EADI,EACJA,KAAME,EADF,EACEA,KAab,OAXAL,EAAS6C,IAAGL,GAEZpC,EAAQD,GACRG,EAAQD,GAERL,EAAO8C,KAAK,OAAQ,CAAE3C,OAAME,SAAQ,SAAC0C,OAM9B,WACH/C,EAAO8C,KAAK,cAEZ9C,EAAOgD,SAEX,CAACR,EAAUF,EAASM,SAEvBH,qBAAU,WACRzC,EAAOiD,GAAG,WAAU,SAAC9B,GACjBoB,EAAY,GAAD,mBAAKL,GAAL,CAAcf,UAE7B,CAACe,IAWH,OACI,yBAAK3B,UAAU,kBACX,yBAAKA,UAAU,aACZ,kBAAC,EAAD,CAASF,KAAMA,IACf,kBAAC,EAAD,CAAU6B,SAAUA,EAAU/B,KAAMA,IACpC,kBAAC,EAAD,CAAOgB,QAASA,EAASC,WAAYA,EAAYC,YAdxC,SAACV,GACjBA,EAAMI,iBACJI,GACAnB,EAAO8C,KAAK,cAAc3B,GAAS,WAC/BC,EAAW,aMlCV8B,EAPH,kBACR,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAOC,KAAK,IAAIC,OAAK,EAACC,UAAWpD,IACjC,kBAAC,IAAD,CAAOkD,KAAK,QAASE,UAAWhB,MCPxCiB,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,cAAc,W","file":"static/js/main.6032c5c6.chunk.js","sourcesContent":["import React,{useState, useEffect}  from 'react';\r\nimport queryString from 'query-string';\r\nimport io from 'socket.io-client';\r\n\r\nimport './Chat.css';\r\nimport InfoBar from '../InfoBar/InfoBar';\r\nimport Input from '../Input/Input';\r\nimport Messages from '../Messages/Messages';\r\n\r\nlet socket;\r\n\r\nconst Chat = ({location})=>{\r\n\r\n    const [name,setName] = useState('');\r\n    const [room,setRoom] = useState('');\r\n    const [message,setMessage] = useState('');\r\n    const [messages,setMessages] = useState([]);\r\n    const ENDPOINT = 'https://real-time-react-chat.herokuapp.com/';\r\n\r\n    useEffect(()=>{\r\n       const {name, room} = queryString.parse(location.search);\r\n\r\n       socket = io(ENDPOINT);\r\n\r\n       setName(name);\r\n       setRoom(room);\r\n\r\n       socket.emit('join', { name, room }, (err) => {\r\n           if(err){\r\n               \r\n           }\r\n       });  \r\n       \r\n       return ()=>{\r\n           socket.emit('disconnect');\r\n\r\n           socket.off();\r\n       };\r\n    } ,[ENDPOINT, location.search]);\r\n\r\n    useEffect(()=>{\r\n      socket.on('message',(message)=>{\r\n          setMessages([...messages,message]);\r\n      });\r\n    },[messages]);\r\n\r\n    const sendMessage = (event)=>{\r\n        event.preventDefault();\r\n       if(message){\r\n          socket.emit('sendMessage',message, ()=>{\r\n              setMessage('');\r\n          });\r\n       }\r\n    };\r\n\r\n    return   (\r\n        <div className=\"outerContainer\">\r\n            <div className=\"container\">\r\n               <InfoBar room={room}/>\r\n               <Messages messages={messages} name={name}/>\r\n               <Input message={message} setMessage={setMessage} sendMessage={sendMessage}/>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Chat;","import React, {useState} from 'react';\r\nimport {Link} from 'react-router-dom';\r\n\r\nimport './Join.css';\r\n\r\nconst Join = () =>{\r\n    const [name,setName] = useState('');\r\n    const [room,setRoom] = useState('');\r\n\r\n    return (\r\n        <div className=\"joinOuterContainer\">\r\n            <div className=\"joinInnerContainer\">\r\n                <h1 className=\"heading\">Join</h1>\r\n                <div><input placeholder=\"Name\" className=\"joinInput\" type=\"text\" onChange={(event)=>setName(event.target.value)}></input></div>\r\n                <div><input placeholder=\"Room\" className=\"joinInput mt-20\" type=\"text\" onChange={(event)=>setRoom(event.target.value)}></input></div>\r\n\r\n                <Link onClick={event => (!name && !room) ? event.preventDefault(): null} to={`/chat?name=${name}&room=${room}`}>\r\n                  <button className=\"button mt-20\" type=\"submit\">Sign In</button>\r\n                </Link>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Join;","import React from 'react';\r\n\r\nimport './InfoBar.css';\r\n\r\nconst InfoBar = ({room})=>{\r\n\r\n    //todo add icons\r\n return (<div className=\"infoBar\">\r\n            <div className=\"leftInnerContainer\">\r\n                <h2>. </h2>\r\n                <h3>{room}</h3>\r\n            </div>\r\n            <div className=\"rightInnerContainer\">\r\n                <a href=\"/\">X</a>\r\n            </div>\r\n        </div>)\r\n}\r\n\r\nexport default InfoBar;","import React from 'react';\r\n\r\nimport './Input.css';\r\n\r\nconst InfoBar = ({message, setMessage, sendMessage})=>{\r\n return (\r\n     <form className=\"form\">\r\n         <input className=\"input\"\r\n         type=\"text\"\r\n         placeholder=\"Type a message...\"\r\n         value={message} \r\n         onChange={(event)=>setMessage(event.target.value)} \r\n         onKeyPress={event=>event.key==='Enter'?sendMessage(event): null}/>\r\n        <button className=\"sendButton\" onClick = {(event)=> sendMessage(event)} >Send</button>\r\n     </form>\r\n )\r\n}\r\n\r\nexport default InfoBar;","import React from 'react';\r\nimport ReactEmoji from 'react-emoji';\r\n\r\nimport './Message.css';\r\n\r\nconst Message = ({message:{text,user}, name}) => {\r\n    let isSentByCurrentUser = false;\r\n    const trimmedName = name.trim().toLowerCase();\r\n\r\n    if(user === trimmedName){\r\n      isSentByCurrentUser = true;\r\n    }\r\n\r\n    return  (\r\n       isSentByCurrentUser\r\n        ?(\r\n          <div className=\"messageContainer justifyEnd\">\r\n             <p className=\"sentText\">{trimmedName}</p>\r\n             <div className=\"messageBox backgroundBlue\">\r\n               <p className=\"messageText colorWhite\">{ReactEmoji.emojify(text)}</p>\r\n             </div>\r\n          </div>\r\n        )\r\n        :(\r\n          <div className=\"messageContainer justifyStart\">\r\n             \r\n             <div className=\"messageBox backgroundLight\">\r\n               <p className=\"messageText colorDark\">{ReactEmoji.emojify(text)}</p>\r\n             </div>\r\n             <p className=\"sentText pl-10\">{user}</p>\r\n          </div>\r\n        )\r\n    )\r\n}\r\n\r\nexport default Message;","import React from 'react';\r\nimport ScrollToBottom from 'react-scroll-to-bottom';\r\n\r\nimport Message from '../Message/Message';\r\nimport './Messages.css';\r\n\r\nconst Messages = ({messages,name}) => {\r\n    return  (\r\n        <ScrollToBottom className=\"messages\">\r\n            {messages.map((message, i)=> <div key={i}><Message message={message} name={name}/></div>)}\r\n        </ScrollToBottom>\r\n    )\r\n}\r\n\r\nexport default Messages;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport {BrowserRouter as Router, Route} from 'react-router-dom';\r\n\r\nimport Join from './components/Join/Join';\r\nimport Chat from './components/Chat/Chat';\r\n\r\n\r\nconst App = ()=>(\r\n    <Router>\r\n        <Route path=\"/\" exact component={Join}/>\r\n        <Route path=\"/chat\"  component={Chat}/>\r\n    </Router>\r\n);\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.querySelector('#root'));\r\n\r\n\r\n"],"sourceRoot":""}